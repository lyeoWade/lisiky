算法：步骤

性能

算法：快 省

3 8		5		(3+8)/2		11/2	5.5->5
3 4 5 6 7 8

4 12		8		(4+12)/2	16/2	8
4 5 6 7 8 9 10 11 12

1 5		3		(1+5)/2		6/2	3
1 2 3 4 5

s e		?
(s+e)/2


arr=[3];

indexOfArr(12, 0, 0)

------------------------------------------------------------------------------------------------

线性查找			性能极低
	1	n		n/2		4亿3千万	2亿次
						170亿		85亿次

二分查找			性能极高
	1	log2(n)		log2(n)/2	4亿3千万	32次
						170亿		34次

------------------------------------------------------------------------------------------------

算法：

var arr=[12,6]
sortArr(arr, 0, 1)

------------------------------------------------------------------------------------------------

分治――太通用了
	并不是最完美的		相当于80%完美程度
	开发效率特别高

------------------------------------------------------------------------------------------------

100分			13+86
[13, 90, 86, 37]