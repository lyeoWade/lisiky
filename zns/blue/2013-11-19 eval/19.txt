

try....catch(e){}

阻止报错，程序也会运行！


var arr=[34234,5,4,546,5]  //存东西

垃圾回收机制               浏览器定时回收

如果变量不用了、则可以回收


局部变量----短、函数执行完成
全局变量----长、等页面被关闭才被回收 --特消耗资源

子函数依然能访问父级的局部变量---则父级的局部变量不会被回收


作用域链 

闭包：如果子函数还能访问 那么整个作用域链上的所有的变量都不会回收！

作用域链的生存时间取决于子函数！



优化  

影响因素---网络、执行



Waiting(等待)   是服务器处理数据的时间


客服端网速
内容
服务器带宽太小



yslow



js阻塞加载 
	图片、css、各种文件：并行加载、同时加载
	js文件：在加载的时候不允许任何其他文件加载






外部的js放在body下面

把外部js文件存在自己服务器下面


CDN   ---- Content Delivery Network
		快
		容错
		防止攻击


执行性能：
	稳定性
	扩展性
1、DOM操作-----性能极低(减少DOM操作)
      运动----重点
	     离开可视区暂停
	     变成背景暂停

2、图片
	浏览器特别不擅长处理图片  图片太大特别卡(体积大、不要缩放、尺寸大、平铺)


a、局部变量性能高于全局变量 
b、属性-->window.XXX 很慢

变量优于属性 

对象上:属性越多用起来越慢

局部变量>全局变量>window.XXX

先把length存下来 属性比变量慢

能不用就不用for in 循环  比for循环慢很多(20多倍)



处理随机数 parseInt比Math.floor慢

尽量使用系统函数


















